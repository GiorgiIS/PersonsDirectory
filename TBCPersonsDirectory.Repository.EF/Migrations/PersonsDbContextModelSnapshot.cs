// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TBCPersonsDirectory.Repository.EF;

namespace TBCPersonsDirectory.Repository.EF.Migrations
{
    [DbContext(typeof(PersonsDbContext))]
    partial class PersonsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TBCPersonsDirectory.Core.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Citys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 12, 14, 10, 43, 47, 195, DateTimeKind.Utc).AddTicks(3977),
                            Name = "Tbilisi",
                            UpdatedAt = new DateTime(2019, 12, 14, 10, 43, 47, 195, DateTimeKind.Utc).AddTicks(4900)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 12, 14, 10, 43, 47, 195, DateTimeKind.Utc).AddTicks(6753),
                            Name = "Batumi",
                            UpdatedAt = new DateTime(2019, 12, 14, 10, 43, 47, 195, DateTimeKind.Utc).AddTicks(6765)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 12, 14, 10, 43, 47, 195, DateTimeKind.Utc).AddTicks(6833),
                            Name = "Kutaisi",
                            UpdatedAt = new DateTime(2019, 12, 14, 10, 43, 47, 195, DateTimeKind.Utc).AddTicks(6834)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2019, 12, 14, 10, 43, 47, 195, DateTimeKind.Utc).AddTicks(6836),
                            Name = "Foti",
                            UpdatedAt = new DateTime(2019, 12, 14, 10, 43, 47, 195, DateTimeKind.Utc).AddTicks(6837)
                        });
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.Person", b =>
                {
                    b.HasOne("TBCPersonsDirectory.Core.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");
                });
#pragma warning restore 612, 618
        }
    }
}
