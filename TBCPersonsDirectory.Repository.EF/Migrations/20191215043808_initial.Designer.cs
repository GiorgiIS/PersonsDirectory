// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TBCPersonsDirectory.Repository.EF;

namespace TBCPersonsDirectory.Repository.EF.Migrations
{
    [DbContext(typeof(PersonsDbContext))]
    [Migration("20191215043808_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TBCPersonsDirectory.Core.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Citys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tbilisi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Batumi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kutaisi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Foti"
                        });
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.ConnectionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConnectionType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "College"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Familiar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Relative"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1994, 12, 15, 8, 38, 8, 423, DateTimeKind.Local).AddTicks(6699),
                            CityId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 423, DateTimeKind.Utc).AddTicks(4620),
                            FirstName = "Kaka",
                            GenderId = 1,
                            ImageUrl = "NO_IMAGE",
                            LastName = "Kuku",
                            PrivateNumber = "12345678911",
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 423, DateTimeKind.Utc).AddTicks(5279)
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1994, 12, 15, 8, 38, 8, 424, DateTimeKind.Local).AddTicks(7466),
                            CityId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(7432),
                            FirstName = "Paolo",
                            GenderId = 1,
                            ImageUrl = "NO_IMAGE",
                            LastName = "Maldini",
                            PrivateNumber = "06345678911",
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(7443)
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1991, 12, 15, 8, 38, 8, 424, DateTimeKind.Local).AddTicks(7533),
                            CityId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(7531),
                            FirstName = "არაგორნ",
                            GenderId = 1,
                            ImageUrl = "NO_IMAGE",
                            LastName = "ელენდიელი",
                            PrivateNumber = "01457876911",
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(7532)
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1993, 12, 15, 8, 38, 8, 424, DateTimeKind.Local).AddTicks(7539),
                            CityId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(7537),
                            FirstName = "ვიქტორ",
                            GenderId = 1,
                            ImageUrl = "NO_IMAGE",
                            LastName = "ჰიუგო",
                            PrivateNumber = "11566378911",
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(7538)
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1996, 12, 15, 8, 38, 8, 424, DateTimeKind.Local).AddTicks(7543),
                            CityId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(7541),
                            FirstName = "ვარდან",
                            GenderId = 1,
                            ImageUrl = "NO_IMAGE",
                            LastName = "მამეკონიანი",
                            PrivateNumber = "12366278911",
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(7542)
                        });
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.PersonConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConnectionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FirstPersonId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondPersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionTypeId");

                    b.HasIndex("FirstPersonId");

                    b.HasIndex("SecondPersonId");

                    b.ToTable("PersonConnections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConnectionTypeId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(1417),
                            FirstPersonId = 1,
                            SecondPersonId = 2,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(1421)
                        },
                        new
                        {
                            Id = 2,
                            ConnectionTypeId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2719),
                            FirstPersonId = 1,
                            SecondPersonId = 3,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2722)
                        },
                        new
                        {
                            Id = 3,
                            ConnectionTypeId = 2,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2746),
                            FirstPersonId = 1,
                            SecondPersonId = 4,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2747)
                        },
                        new
                        {
                            Id = 4,
                            ConnectionTypeId = 2,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2749),
                            FirstPersonId = 2,
                            SecondPersonId = 1,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2749)
                        },
                        new
                        {
                            Id = 5,
                            ConnectionTypeId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2751),
                            FirstPersonId = 2,
                            SecondPersonId = 3,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2751)
                        },
                        new
                        {
                            Id = 6,
                            ConnectionTypeId = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2755),
                            FirstPersonId = 3,
                            SecondPersonId = 1,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(2756)
                        });
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.PersonPhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PersonId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PhoneNumberTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("PhoneNumberTypeId");

                    b.ToTable("PersonPhoneNumber");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(8793),
                            Number = "111111111",
                            PersonId = 1,
                            PhoneNumberTypeId = 1,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 424, DateTimeKind.Utc).AddTicks(8798)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(96),
                            Number = "222222222",
                            PersonId = 1,
                            PhoneNumberTypeId = 2,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(100)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(123),
                            Number = "333333333",
                            PersonId = 2,
                            PhoneNumberTypeId = 2,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(124)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(125),
                            Number = "55555555",
                            PersonId = 2,
                            PhoneNumberTypeId = 1,
                            UpdatedAt = new DateTime(2019, 12, 15, 4, 38, 8, 425, DateTimeKind.Utc).AddTicks(126)
                        });
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.PhoneNumberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneNumberTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Office"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Home"
                        });
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.Person", b =>
                {
                    b.HasOne("TBCPersonsDirectory.Core.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("TBCPersonsDirectory.Core.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.PersonConnection", b =>
                {
                    b.HasOne("TBCPersonsDirectory.Core.ConnectionType", "ConnectionType")
                        .WithMany()
                        .HasForeignKey("ConnectionTypeId");

                    b.HasOne("TBCPersonsDirectory.Core.Person", "FirstPerson")
                        .WithMany()
                        .HasForeignKey("FirstPersonId");

                    b.HasOne("TBCPersonsDirectory.Core.Person", "SecondPerson")
                        .WithMany()
                        .HasForeignKey("SecondPersonId");
                });

            modelBuilder.Entity("TBCPersonsDirectory.Core.PersonPhoneNumber", b =>
                {
                    b.HasOne("TBCPersonsDirectory.Core.Person", "Person")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TBCPersonsDirectory.Core.PhoneNumberType", "PhoneNumberType")
                        .WithMany()
                        .HasForeignKey("PhoneNumberTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
